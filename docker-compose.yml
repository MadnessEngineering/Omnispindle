services:
  # Mosquitto MQTT broker for messaging
  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    networks:
      - madness_network

  # MCP Todo Server (Omnispindle)
  mcp-todo-server:
    build:
      context: .
      dockerfile: Dockerfile
    image: danedens31/omnispindle:0.0.9
    restart: unless-stopped
    ports:
      - "8000:8000"  # FastAPI web server and MCP stdio endpoints
    environment:
      - OMNISPINDLE_MODE=${OMNISPINDLE_MODE:-api}
      - OMNISPINDLE_TOOL_LOADOUT=${OMNISPINDLE_TOOL_LOADOUT:-basic}
      - MADNESS_API_URL=${MADNESS_API_URL:-https://madnessinteractive.cc/api}
      - MADNESS_AUTH_TOKEN=${MADNESS_AUTH_TOKEN}
      - MCP_USER_EMAIL=${MCP_USER_EMAIL}
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - HOST=0.0.0.0
      - PORT=8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - madness_network

  # # Todo Dashboard (optional web UI)
  # todo-dashboard:
  #   build:
  #     context: ./Todomill_projectorium
  #     dockerfile: Dockerfile
  #   image: danedens31/omnispindle-dashboard:latest
  #   restart: unless-stopped
  #   ports:
  #     - "3001:80"
  #   environment:
  #     - API_URL=http://mcp-todo-server:8080
  #   depends_on:
  #     - mcp-todo-server
  #   networks:
  #     - madness_network

networks:
  madness_network:
    driver: bridge
    name: madness_network
    external: true

volumes:
  mosquitto_data:
  mosquitto_log:
